{"version":3,"sources":["App.elements.js","App.js","index.js"],"names":["Container","styled","div","props","url","Header","header","Message","Result","Temp","Desc","Icon","img","Form","form","Input","input","Button","button","App","string","defaultUrl","openweather","pixabay","useState","search","setSearch","weather","setWeather","imgURL","setImgURL","loading","setLoading","error","setError","handleSearch","e","a","preventDefault","target","reset","Promise","all","fetchWeather","fetchPlace","then","place","undefined","main","catch","err","console","log","city","fetch","response","status","Error","json","message","picNumber","total","randomIdx","Math","floor","random","min","hits","webformatURL","onSubmit","onChange","value","placeholder","autoFocus","name","sys","country","src","icon","alt","round","temp","description","toUpperCase","slice","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00b310c9.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Container = styled.div`\n  min-width: 100%;\n  min-height: 100%;\n  padding-top: 3rem;\n  padding-left: 3rem;\n  background-color: #35394a9e;\n  background-image: url(${props => props.url});\n  background-blend-mode: color;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  background-clip: border-box;\n`;\n\nexport const Header = styled.header`\n  font-size: 80px;\n  line-height: 1;\n  font-family: 'Timmana';\n  color: white;\n  margin-bottom: 20px;\n`;\n\nexport const Message = styled.div`\n  color: white;\n  font-size: 30px;\n`;\n\nexport const Result = styled.div`\n  color: white;\n  margin-top: 10px;\n  padding: 5px 20px 5px 0;\n  border-radius: 10px;\n  display: inline-flex;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.2);\n  box-shadow: 3px 3px rgba(0,0,0,0.3)\n`;\n\nexport const Temp = styled.div`\n  font-size: 45px;\n  text-shadow: 3px 3px rgba(0,0,0,0.5)\n`;\n\nexport const Desc = styled.div`\n  font-size: 20px;\n`;\n\n\nexport const Icon = styled.img`\n  position: relative;\n  top: -13px;\n  left: 0px;\n`;\n\nexport const Form = styled.form`\n  display: grid;\n  justify-content: flex-start;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 15px;\n\n  font-family: inherit;\n  text-align: center;\n\n  appearance: none;\n  outline: none;\n  border-radius: 20px;\n  border: 1px solid rgba(0,0,0,0.5);\n\n  background-color: rgba(255,255,255, 0.5);\n\n  &:focus, &:active{\n    background-color: rgba(255,255,255, 0.8);\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 1px solid white;\n  color: white;\n  border-radius: 20px;\n  padding: 10px 15px;\n  outline: none;\n\n  &:hover, &:focus, &:active{\n    cursor: pointer;\n    background-color: rgba(255,255,255, 0.5);\n  }\n`;","import React, { useState } from \"react\";\nimport {\n  Container,\n  Header,\n  Form,\n  Input,\n  Button,\n  Message,\n  Result,\n  Icon,\n  Temp,\n  Desc,\n} from \"./App.elements.js\";\n\nfunction App() {\n  const defaultUrl =\n    \"https://cdn.pixabay.com/photo/2017/01/28/02/24/japan-2014619_1280.jpg\";\n  const openweather = {\n    base: \"https://api.openweathermap.org/data/2.5/\",\n    key: \"b9d390bff44379667946824341234c0e\",\n  };\n  const pixabay = {\n    base: \"https://pixabay.com/api/\",\n    key: \"19192258-6513f177287dd2182cd9eed52\",\n  };\n\n  const [search, setSearch] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [imgURL, setImgURL] = useState(defaultUrl);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    e.target.reset();\n    setLoading(true);\n    setError(false);\n\n    Promise.all([fetchWeather(search), fetchPlace(search)])\n      .then(([weather, place]) => {\n        setWeather(weather);\n        setImgURL(place);\n        return weather;\n      })\n      .then((weather) => {\n        if (weather.main === undefined) {\n          setError(true);\n        }\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const fetchWeather = async (city) => {\n    const url = `${openweather.base}weather?q=${city}&units=metric&appid=${openweather.key}`;\n    try {\n      const response = await fetch(url);\n      if (response.status === 404) throw new Error(\"not found\");\n      return await response.json();\n    } catch (err) {\n      console.log(\"weather :\", err.message);\n      return {};\n    }\n  };\n\n  const fetchPlace = async (city) => {\n    const url = `${pixabay.base}?key=${pixabay.key}&q=${city}&image_type=photo&category=places`;\n\n    try {\n      const response = await fetch(url);\n      const json = await response.json();\n      const picNumber = json.total;\n\n      if (picNumber === 0) throw new Error(\"no pictures\");\n\n      const randomIdx = Math.floor(Math.random() * Math.min(10, picNumber));\n      return json.hits[randomIdx].webformatURL;\n    } catch (err) {\n      console.log(\"place :\", err.message);\n      return defaultUrl;\n    }\n  };\n\n  const updatesearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const capitalize = (string) => {\n    if (string === \"\") return \"\";\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\n  };\n\n  return (\n    <Container url={imgURL}>\n      <Header>Weather</Header>\n      <Form onSubmit={handleSearch}>\n        <Input onChange={updatesearch} placeholder={\"City...\"} autoFocus />\n        <Button>Search</Button>\n      </Form>\n      {weather.main && !error && (\n        <>\n          <Message>\n            {weather.name}, {weather.sys.country}\n          </Message>\n          <Result>\n            <Icon\n              src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              alt=\"\"\n            />\n            <div>\n              <Temp>{Math.round(weather.main.temp)}Â°C</Temp>\n              <Desc>{capitalize(weather.weather[0].description)}</Desc>\n            </div>\n          </Result>\n        </>\n      )}\n      {loading && <Message>Loading...</Message>}\n      {!loading && error && <Message>City not found!</Message>}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}