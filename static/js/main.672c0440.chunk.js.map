{"version":3,"sources":["App.elements.js","App.jsx","index.jsx"],"names":["Container","styled","div","props","url","Header","header","Message","Result","Temp","Desc","Icon","img","Form","form","Input","input","Button","button","App","string","defaultUrl","openweather","pixabay","useState","search","setSearch","weather","setWeather","imgURL","setImgURL","loading","setLoading","error","setError","fetchWeather","city","a","fetch","response","status","Error","json","console","log","message","fetchPlace","picNumber","total","randomIdx","Math","floor","random","min","hits","webformatURL","handleSearch","e","preventDefault","target","reset","Promise","all","then","weatherData","place","undefined","main","catch","err","onSubmit","onChange","value","placeholder","autoFocus","name","sys","country","src","icon","alt","round","temp","description","toUpperCase","slice","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.672c0440.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  min-width: 100%;\n  min-height: 100%;\n  padding-top: 3rem;\n  padding-left: 3rem;\n  background: url(${(props) => props.url}),\n    linear-gradient(to bottom, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.65));\n  background-blend-mode: multiply;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  background-clip: border-box;\n`;\n\nexport const Header = styled.header`\n  font-size: 80px;\n  line-height: 1;\n  font-family: \"Timmana\";\n  color: white;\n  margin-bottom: 20px;\n`;\n\nexport const Message = styled.div`\n  color: white;\n  font-size: 30px;\n`;\n\nexport const Result = styled.div`\n  color: white;\n  margin-top: 10px;\n  padding: 5px 20px 5px 0;\n  border-radius: 10px;\n  display: inline-flex;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.2);\n  box-shadow: 3px 3px rgba(0, 0, 0, 0.3);\n`;\n\nexport const Temp = styled.div`\n  font-size: 45px;\n  text-shadow: 3px 3px rgba(0, 0, 0, 0.5);\n`;\n\nexport const Desc = styled.div`\n  font-size: 20px;\n`;\n\nexport const Icon = styled.img`\n  position: relative;\n  top: -13px;\n  left: 0px;\n`;\n\nexport const Form = styled.form`\n  display: grid;\n  justify-content: flex-start;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 15px;\n\n  font-size: inherit;\n  font-family: inherit;\n  text-align: center;\n\n  appearance: none;\n  outline: none;\n  border-radius: 20px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n\n  background-color: rgba(255, 255, 255, 0.5);\n\n  &:focus,\n  &:active {\n    background-color: rgba(255, 255, 255, 0.8);\n  }\n\n  &::placeholder {\n    color: rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 1px solid white;\n\n  font-size: inherit;\n  color: white;\n\n  border-radius: 20px;\n  padding: 10px 15px;\n  outline: none;\n\n  &:hover,\n  &:focus,\n  &:active {\n    cursor: pointer;\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Header,\n  Form,\n  Input,\n  Button,\n  Message,\n  Result,\n  Icon,\n  Temp,\n  Desc,\n} from \"./App.elements\";\n\nfunction App() {\n  const defaultUrl =\n    \"https://cdn.pixabay.com/photo/2017/01/28/02/24/japan-2014619_1280.jpg\";\n  const openweather = {\n    base: \"https://api.openweathermap.org/data/2.5/\",\n    key: \"b9d390bff44379667946824341234c0e\",\n  };\n  const pixabay = {\n    base: \"https://pixabay.com/api/\",\n    key: \"19192258-6513f177287dd2182cd9eed52\",\n  };\n\n  const [search, setSearch] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [imgURL, setImgURL] = useState(defaultUrl);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchWeather = async (city) => {\n    const url = `${openweather.base}weather?q=${city}&units=metric&appid=${openweather.key}`;\n    try {\n      const response = await fetch(url);\n      if (response.status === 404) throw new Error(\"not found\");\n      return await response.json();\n    } catch (err) {\n      console.log(\"weather :\", err.message);\n      return {};\n    }\n  };\n\n  const fetchPlace = async (city) => {\n    const url = `${pixabay.base}?key=${pixabay.key}&q=${city}&image_type=photo&category=places`;\n\n    try {\n      const response = await fetch(url);\n      const json = await response.json();\n      const picNumber = json.total;\n\n      if (picNumber === 0) throw new Error(\"no pictures\");\n\n      const randomIdx = Math.floor(Math.random() * Math.min(10, picNumber));\n      return json.hits[randomIdx].webformatURL;\n    } catch (err) {\n      console.log(\"place :\", err.message);\n      return defaultUrl;\n    }\n  };\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    e.target.reset();\n    setLoading(true);\n    setError(false);\n\n    Promise.all([fetchWeather(search), fetchPlace(search)])\n      .then(([weatherData, place]) => {\n        setWeather(weatherData);\n        setImgURL(place);\n        return weatherData;\n      })\n      .then((weatherData) => {\n        if (weatherData.main === undefined) {\n          setError(true);\n        }\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const updatesearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const capitalize = (string) => {\n    if (string === \"\") return \"\";\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\n  };\n\n  return (\n    <Container url={imgURL}>\n      <Header>Weather</Header>\n      <Form onSubmit={handleSearch}>\n        <Input onChange={updatesearch} placeholder=\"City...\" autoFocus />\n        <Button>Search</Button>\n      </Form>\n      {weather.main && !error && (\n        <>\n          <Message>{`${weather.name}, ${weather.sys.country}`}</Message>\n          <Result>\n            <Icon\n              src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              alt=\"\"\n            />\n            <div>\n              <Temp>\n                {Math.round(weather.main.temp)}\n                Â°C\n              </Temp>\n              <Desc>{capitalize(weather.weather[0].description)}</Desc>\n            </div>\n          </Result>\n        </>\n      )}\n      {loading && <Message>Loading...</Message>}\n      {!loading && error && <Message>City not found!</Message>}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}