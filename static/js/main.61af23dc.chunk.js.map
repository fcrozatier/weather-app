{"version":3,"sources":["App.elements.js","App.js","index.js"],"names":["Container","styled","div","props","url","Header","header","Message","Icon","img","Form","form","Input","input","Button","button","App","defaultUrl","useState","city","setCity","search","setSearch","weather","setWeather","imgURL","setImgURL","display","setDisplay","loading","setLoading","handleSearch","e","a","preventDefault","target","reset","capitalize","Promise","all","fetchWeather","fetchPlace","then","place","temp","catch","err","console","log","fetch","response","status","Error","json","Math","round","main","description","icon","message","picNumber","total","randomIdx","floor","random","min","hits","webformatURL","string","toUpperCase","slice","toLowerCase","onSubmit","onChange","value","placeholder","autoFocus","alt","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61af23dc.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Container = styled.div`\n  min-width: 100%;\n  min-height: 100%;\n  padding-top: 60px;\n  padding-left: 100px;\n  background-color: #35394a9e;\n  background-image: url(${props => props.url});\n  background-blend-mode: color;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-clip: border-box;\n`;\n\nexport const Header = styled.header`\n  font-size: 80px;\n  line-height: 1;\n  font-family: 'Timmana';\n  color: white;\n  margin-bottom: 20px;\n`;\n\nexport const Message = styled.div`\n  color: white;\n  font-size: 30px;\n`;\n\nexport const Icon = styled.img`\n  position: relative;\n  top: -90px;\n  left: -100px;\n`;\n\nexport const Form = styled.form`\n  display: grid;\n  justify-content: flex-start;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 15px;\n  font-family: inherit;\n  text-align: center;\n  border-radius: 20px;\n  border: 1px solid black;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 1px solid white;\n  color: white;\n  border-radius: 20px;\n  padding: 10px 15px;\n  outline: none;\n\n  &:hover{\n    cursor: pointer;\n  }\n`;","import React, { useState } from 'react'\nimport { \n  Container, \n  Header, \n  Form, \n  Input, \n  Button, \n  Message,\n  Icon,\n}  from './App.elements.js'\n\nfunction App() {\n  const defaultUrl = \"https://cdn.pixabay.com/photo/2017/01/28/02/24/japan-2014619_1280.jpg\";\n  const [city, setCity] = useState(\"\")\n  const [search, setSearch] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [imgURL, setImgURL] = useState(defaultUrl);\n  const [display, setDisplay] = useState(false);\n  const [loading, setLoading] = useState(false);\n  \n  const handleSearch = async (e) =>{\n    e.preventDefault();\n    e.target.reset();\n    setLoading(true);\n    setDisplay(false);\n    setCity(capitalize(search));\n    \n    Promise.all([\n      fetchWeather(search),\n      fetchPlace(search)])\n      .then(([weather, place]) => {  \n        setWeather(weather);\n        setImgURL(place);\n        return weather\n      })\n      .then(weather => {\n        if (weather.temp !== \"\"){\n          setDisplay(true);\n        }\n        setLoading(false);\n      })\n      .catch(err => console.log(err));\n      \n  }\n\n  const fetchWeather = async (city) => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=b9d390bff44379667946824341234c0e`\n    try {\n      const response =  await fetch(url);      \n      if (response.status === 404) throw new Error(\"not found\")\n      const json = await response.json();\n      console.log(\"App -> json\", json)\n      return {\n        temp: Math.round(json.main.temp),\n        description: json.weather[0].description,\n        icon: json.weather[0].icon\n      };\n    } catch (err) {\n      console.log(\"weather :\", err.message);\n      return { \n        temp: \"\",\n        description: \"\"\n      };\n    }\n  }\n\n  const fetchPlace = async (city) => {\n    const url = `https://pixabay.com/api/?key=19192258-6513f177287dd2182cd9eed52&q=${city}&image_type=photo&category=places`;\n    \n    try {\n      const response =  await fetch(url);\n      const json = await response.json()\n      const picNumber = json.total;\n\n      if (picNumber === 0 ) throw new Error(\"no pictures\")\n        \n      const randomIdx = Math.floor(\n        Math.random() * Math.min(10, picNumber) );\n      return json.hits[randomIdx].webformatURL;\n    \n    } catch (err) {\n      console.log(\"place :\", err.message)\n      return defaultUrl;\n    }\n\n  }\n\n  const updatesearch = (e) => {\n    setSearch(e.target.value);\n  }\n\n  const capitalize = (string) => {\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\n  }\n\n  return (\n    <Container url={imgURL}>\n      <Header>Weather</Header>\n      <Form onSubmit={handleSearch}>\n        <Input \n          onChange={updatesearch} \n          placeholder={'city'}\n          autoFocus\n        />\n        <Button>Search</Button>\n      </Form>\n      { \n        city && display && (\n          <>\n          <Message>{city} {weather.temp}Â°C,</Message>\n          <Message> {capitalize(weather.description)}</Message>\n          <Icon\n            alt=\"weather-icon\"\n            src={`http://openweathermap.org/img/wn/${weather.icon}@2x.png`}\n          ></Icon>\n        </>\n        )\n       }\n       {\n         loading &&\n         <Message>Loading...</Message>\n       }\n       { \n         city && !loading && !display && \n         <Message>City not found!</Message>\n       }\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}